(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{375:function(t,e,a){"use strict";a.r(e);var n=a(40),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"your-first-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#your-first-project"}},[t._v("#")]),t._v(" Your First Project")]),t._v(" "),a("ToggleDarkMode"),t._v(" "),a("p",[t._v("Where do you start to create a page or set up an API endpoint? Here is a brief explanation of the steps you can take to create your first application. We will explain how to create a page and how to create an API endpoint. You will soon see that the possibilities are endless.")]),t._v(" "),a("h2",{attrs:{id:"create-a-web-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-web-page"}},[t._v("#")]),t._v(" Create A Web Page")]),t._v(" "),a("p",[t._v("Confetti has a homepage ready by default. For now, we will create a contact page.")]),t._v(" "),a("h3",{attrs:{id:"controller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[t._v("#")]),t._v(" Controller")]),t._v(" "),a("p",[t._v("First, you want to create a function where the request comes in and a response is returned. We call that type of function a controller. Make a file "),a("code",[t._v("contact.go")]),t._v(" in "),a("code",[t._v("app/http/controllers")]),t._v(" with the following content:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" controllers\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/confetti-framework/contract/inter"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/confetti-framework/routing/outcome"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Contact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request inter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" inter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Response "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" outcome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This is the place where you can place your logic. Of course you can make other functions and structs to keep everything organized.")]),t._v(" "),a("p",[t._v("Now we return HTML directly. Usually it is better to use a view and template for this. It is advisable to read the "),a("a",{attrs:{href:"../the-basics/views"}},[t._v("View Documentation")]),t._v(". If you want to get values from the request, then you can read the "),a("a",{attrs:{href:"../the-basics/requests"}},[t._v("Request Documentation")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#route"}},[t._v("#")]),t._v(" Route")]),t._v(" "),a("p",[t._v("In order for Confetti to know which controller belongs to which url, you must register your controller in "),a("code",[t._v("routes/web.go")]),t._v(". There you can also see how the homepage has already been set. Add "),a("code",[t._v('Get("/contact", controllers.Contact),')]),t._v(" to register your contact controller. View the "),a("a",{attrs:{href:"../the-basics/routing"}},[t._v("Route Documentation")]),t._v(" for more information.")]),t._v(" "),a("p",[t._v("Once your code is rebuilt, the contact page is available at "),a("a",{attrs:{href:"http://localhost/contact",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost/contact"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"create-an-api-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-an-api-endpoint"}},[t._v("#")]),t._v(" Create An API Endpoint")]),t._v(" "),a("p",[t._v("If you don't want to build a page, but want to transfer another data, you would want to use API endpoints. Confetti makes it very easy to create these endpoints.")]),t._v(" "),a("h3",{attrs:{id:"controller-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controller-2"}},[t._v("#")]),t._v(" Controller")]),t._v(" "),a("p",[t._v("Again, you need a function where you determine what should be done and what should be returned. Make a file "),a("code",[t._v("contact.go")]),t._v(" in "),a("code",[t._v("app/http/controllers")]),t._v(" with the following content:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" controllers\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/confetti-framework/contract/inter"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/confetti-framework/routing/outcome"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Contact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request inter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" inter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Response "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tdata "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Singh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"New Delhi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" outcome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[a("code",[t._v("outcome.Json(data)")]),t._v(" is responsible for converting the data to json and it automatically gets the correct headers. More information about responses, consult the "),a("a",{attrs:{href:"../the-basics/responses"}},[t._v("Response Documentation")]),t._v(". If you want to get values from the request, then you can read the "),a("a",{attrs:{href:"../the-basics/requests"}},[t._v("Request Documentation")]),t._v(". It is recommended to validate incoming data. Take a look at the "),a("a",{attrs:{href:"../the-basics/validation"}},[t._v("Validation Documentation")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"route-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#route-2"}},[t._v("#")]),t._v(" Route")]),t._v(" "),a("p",[t._v("Of course Confetti must know at which url this function should be addressed. You can register your controller in "),a("code",[t._v("routes/api.go")]),t._v(". There you can also see how the ping endpoint has already been set. Add "),a("code",[t._v('Get("/contact", controllers.Contact),')]),t._v(" to register your contact controller. View the "),a("a",{attrs:{href:"../the-basics/routing"}},[t._v("Route Documentation")]),t._v(" for more information.")]),t._v(" "),a("p",[t._v("Once your code is rebuilt, the contact page is available at "),a("a",{attrs:{href:"http://localhost/api/contact",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost/api/contact"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("If you want to make your endpoints available through a subdomain (for example "),a("code",[t._v("http://api.localhost/contact")]),t._v("), look at the "),a("RouterLink",{attrs:{to:"/docs/the-basics/routing.html#subdomain-routing"}},[t._v("Subdomain Routing")]),t._v(" section.")],1)])],1)}),[],!1,null,null,null);e.default=s.exports}}]);